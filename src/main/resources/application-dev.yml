spring:
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  api-docs:
    enabled: true
  application:
    name: rent
  http:
    multipart:
      enabled: true
      max-file-size: 200MB
      max-request-size: 200MB

  redis:
    password: 123456
    database: 0
    port: 6379
    host: 58.87.94.48 
    jedis:
      pool:
        max-idle: 30
        max-active: 8
        max-wait: 10000
        min-idle: 10
  rabbitmq:
    host: 58.87.94.48 
    port: 5672
    virtual-host: dev
    username: root
    password: 123456
    listener:
      simple:
        acknowledge-mode: manual
  servlet:
    multipart:
      enabled: true
      max-file-size: 200MB
      max-request-size: 200MB
  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: never
    #      initialize-schema: always
    properties:
      org:
        quartz:
          scheduler:
            instanceName: MyScheduler
            instanceId: AUTO
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            tablePrefix: QRTZ_
            isClustered: true
            clusterCheckinInterval: 10000
            useProperties: false
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 10
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true
  shardingsphere:
    datasource:
      names: prod
      prod:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/rental?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&allowMultiQueries=true&useSSL=false
        username: root
        password: zbb820502
        type: com.alibaba.druid.pool.DruidDataSource
    sharding:
      tables:
        ct_order_by_stages:
          actualDataNodes: prod.ct_order_by_stages_$->{0..9}
          tableStrategy:
            standard:
              shardingColumn: order_id
              preciseAlgorithmClassName: com.rent.config.sharing.OrderIdShardingAlgorithm


mybatis-plus:
  typeAliasesPackage: com.rent.model
  global-config:
    id-type: 0
    db-column-underline: true
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    jdbc-type-for-null: 'null'
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
sms:
  sender: xunda
  aliyun:
    accessKey: '*************'
    accessSecret: '*************'
  #迅达短信配置
  xunda:
    account: XXXXXXX
    password: XXXXXXX
    ext-no: XXXXXXX
  #布云短信配置
  buyun:
    account: 'XXXXXX'
    password: 'XXXXXX'
    ext-no: 'XXXXXX'

#蚂蚁链以及保险配置
ant-chain:
  accessKey: '*************'
  accessSecret: '*************'
  leaseId: '*************'
#OCR身份证照片识别配置
ocr:
  api-id: 'XXXXXXXXXXXXXXXXXXXXXXXXXX'
  api-secret: 'XXXXXXXXXXXXXXXXXXXXXXXXXX'
#人脸识别配置
face:
  keyId: 'XXXXXXX'
  keySecret: 'XXXXXXX'
  sceneId: 'XXXXXXX'
#首新 二要素，风控报告 ，电子合同，物流 配置
sx:
  institution-id: 'XXXXXXX'
  aes-key: 'XXXXXXX'
oss:
  endpoint: oss-cn-XXXXXXX.aliyuncs.com
  accessId: 'XXXXXXX'
  accessKey: 'XXXXXXX'
  bucketName: 'XXXXXXX'
  fileUrlPrefix: https://XXXXXXX.oss-cn-chengdu.aliyuncs.com/ # oos 资源请求前缀

outside:
  app_name: 'XXXXXXX' #小程序名称
  app_code: 'XXXXXXX' #小程序名称拼音首字母（大写）
  app_logo_url: 'XXXXXXX' # 平台logo 路径
  alipay_search_png: 'XXXXXXX' # oss url路径，商家中心生成商品二维码需要
  domain: 'https://www.huakaiyousheng.cn/' #域名
  company: 'XXXXXXX' #公司名称
  address: 'XXXXXXX' #公司地址
  license_no: 'XXXXXXX' #公司营业执照编号
  sign_city: 'XXXXXXX' #公司地址所在地级市
  bank: 'XXXXXXX' #公司公户开户行
  bank_card_no: 'XXXXXXX' #公司公户卡号
  legal_name: 'XXXXXXX' # 法人姓名
  legal_id_no: 'XXXXXXX' # 法人身份证号码
  legal_phone: 'XXXXXXX' # 法人电话
  contract_phone: 'XXXXXXX' # 客服电话
  e_mail: 'XXXXXXX' # 邮箱
  alipay_account: 'XXXXXXX' # 支付宝账号

  service_id: '***' #芝麻免押服务id
  parent_id: '2088002661210626' # 小程序PID
  app_id: '2021004124618044' #小程序APPID
  alipay_interface_content_key: '7zv1XrwKsRHKizVB+a9/fQ==' #接口内容加密方式
  alipay_cert_root: './cert/alipayRootCert.crt' # 小程序证书路径
  alipay_cert_public: './cert/alipayCertPublicKey_RSA2.crt' #小程序证书路径
  app_cert_public: './cert/appCertPublicKey_2021004124618044.crt' #小程序证书路径
  private_key: 'MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCrJ47GZEmRkMF8bkMoCBjpst5PI8Gc8AvWl1bSvmRpvO2fBNzRQHTnpEu5OtGOdgQsw2vi044Zu8wub+dAOGjGF5kfX4gKaF/KlQ0V0H+AW6wafcxPBwl0JYHx71YuE117AcJBeFIHIvkvyU0lmfkvcGxZ9RV7ZdtAFqcn7lcGVwHki5P5nbS+6VCSSS5WbO8Mx9tYzliudkNb4ls5mu8cKl751wHT73eMuJqJGfA7Ky9nfngsN1m1BDtmHcME1ssLV19bobYFqUcok747TOnjoyr/FXr61LN4IFEQKm/IlWy3WURl7Uxrc5ui1EtILthlNi/zS+ra8YZoaY+SjFQlAgMBAAECggEAJvWcNGDDtlTjFjXrJ4OgWCIVJKKZAeZKa5CLfPFF3iPZWyc6NI+djNUDP6i55tnKXX4mYr2RTR5IfhGO7Dlq8ByTCGcwil3z4CNJlTueqlMzu9wC08JgToXzLGU0ksxprQRbeZev5Fv7qPsDipmf9UJ8B4YYW7x1ygLeDeLdAF4RQeh2JBPzdhe53Hr22CZCyXnMVY/Ei39Ka4O5cOzJM38N402Bok6FJUuBjLuMqT05VP8ORujOrfNCEgi+ZtuE7tcw/gMQfTwtWcphKjiBmrERRGvO9i5XnXDcD1UjSvenOGck4M+xyUNznp6eVK3LYOadfVBULj/m/v1zwmdIyQKBgQD22pgG5ZVpISPXROARRfOdGZlVYJPDXkB29Zj+Ca6mnpZgUOqegeK/K6t1b5RsRkZBgTbqXTTmGoVo5O7kOmhekWV+Gz+snwf36H+9noHcCDL5mjb3zeC3U6LRc3SuOPbaqO0FF8ebNUS4x9VBtdLGmPDkgeNUFrx1D1a8Mat8fwKBgQCxfvTR836bjI5jtgG3UWPjRPVh1zXYWtFyBMc8o8lgaEtzaeLdcAsmnwYYOalSluzqkQ3N4u5zE1/3puwS//Bmme4J73zMaEznf6Up4+luYafuTiohzqapz29MVVYO/L5qys3nGeaiZyNOCd/kWHVClyRXAqhvQMp61dKQYuttWwKBgBR20K2ZsMYzWh5Jdm3YJ7b5XU3HoNhMYvm5qII+2Ty03vCDJMAZMmv4udEVe+9x7/cUODI7odwFjNPCTs+ay/YzBX/r0F6GHIn/uz9D+a38/ATXNQFcDuoDw/arJJwg2s4LvQJ0EzcZtmW/Iz28TgnqueWnoungrKTjraQSVg4PAoGAY8yfeSEw0eMg+J2Qr3Na96GBWyb3hpPh6fsXz1fEVamuqtEhlyJ1kpydf6eENgTYZzdyDI6JRjjhn8zCNhikIfxw5DM89225t/yEcF5OlRrholNeyy13dklFKiVdQwYHRuKLDWL509yr9CgHNEwsemmjLC05aXyDnLd3Mmn8N7sCgYAgZaE718n9O2X3egazUNFCRZg5sHudBEPe0u7pIhMtVtFvTsfID6cnIdOL0qDdHi7tbQe6HZ8GSY4No52JcV5G3UISgf7Lmv1Q+8bW8/Ul10i3o0lw6tjWUF6994dSW68fZTk0cFVfh+dYUlYtunvFvr2yAoh8T7zUx3WsA2GorA==' # 小程序私钥 支付宝工具生成的

suning:
  open_sign: false # 是否开启银行卡签约功能
  app_id: 'XXXXXXX' # 应用唯一标识
  saler_merchant_no: 'XXXXXXX'  # 商户号
  sign_key_index: 'XXXXXXX' # 公钥索引
  goods_type: 'XXXXXXX' # 商品类型编码
  # 苏宁颁发的加密公钥
  epp_public_key: 'XXXXXXX'
  # 苏宁颁发的验签公钥
  epp_public_sign_key: 'XXXXXXX'
  # 商户端生产的私钥
  merchant_private_key: 'XXXXXXX'
  # 商户端生产的公钥
  merchant_public_key: 'XXXXXXX'
  env_name: 'PRE'


server:
  port: 9001

knife4j:
  enable: true



